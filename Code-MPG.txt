COGNIBOT MINI PROJECT                                                                                                                                                                      Code to predict mpg by using Randomforest and Decision tree algorithm using given dataset


import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeRegressor
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_squared_error, r2_score

# Load your dataset (replace 'your_dataset.csv' with your actual dataset file)
data = pd.read_excel('/content/autompg.xlsx')

# Handle missing values by replacing '?' with NaN and converting relevant columns to numeric
data['horsepower'] = pd.to_numeric(data['horsepower'], errors='coerce')

# Drop rows with missing values
data.dropna(inplace=True)

# Define your feature columns (attributes)
# Modify this list to include the attributes you want to use for prediction
features = ['cylinders', 'displacement', 'horsepower', 'weight', 'acceleration']

# Split the data into training and testing sets
X = data[features]
y = data['mpg']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Decision Tree Regression
tree_model = DecisionTreeRegressor(random_state=42)
tree_model.fit(X_train, y_train)

# Random Forest Regression
rf_model = RandomForestRegressor(n_estimators=100, random_state=42)
rf_model.fit(X_train, y_train)

# Function to predict MPG for user-provided input
def predict_mpg(model, input_data):
    mpg_prediction = model.predict([input_data])
    return mpg_prediction[0]

# User input for testing the models
user_input = {}
for feature in features:
    user_input[feature] = float(input(f"Enter {feature}: "))

# Predict with Decision Tree
tree_prediction = predict_mpg(tree_model, list(user_input.values()))
print(f"Predicted MPG using Decision Tree: {tree_prediction:.2f}")

# Predict with Random Forest
rf_prediction = predict_mpg(rf_model, list(user_input.values()))
print(f"Predicted MPG using Random Forest: {rf_prediction:.2f}")